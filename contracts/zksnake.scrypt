import "verifier.scrypt";

contract ZkSnake {

    PubKey playerKey;

    int poisonHash;

    @state
    bool player1PoisonHit;

    @state
    bool player2PoisonHit;

    @state
    int player1Snake;

    @state
    int player2Snake;

    // hit 1:player1, 2:player2, 0:no
    public function move(Sig sig, int snakeState1, int snakeState2, int hit, Proof proof, SigHashPreimage txPreimage) {
        require(Tx.checkPreimage(txPreimage));

        require(ZKSNARK.verify([snakeState1, snakeState2, this.poisonHash, hit], proof));

        require(checkSig(sig, this.playerKey));

        this.player1Snake = snakeState1;
        this.player2Snake = snakeState2;

        if (hit == 1) {
            this.player1PoisonHit = true;
            this.player2PoisonHit = false;
        }
        else if (hit == 2) {
            this.player1PoisonHit = false;
            this.player2PoisonHit = true;
        }
        else {
            this.player1PoisonHit = false;
            this.player2PoisonHit = false;
        }

        bytes outputs = b'';

        bytes outputScript = this.getStateScript();
        outputs = Utils.buildOutput(outputScript, SigHash.value(txPreimage));
        require(hash256(outputs) == SigHash.hashOutputs(txPreimage));
    }
}
